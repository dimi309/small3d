find_path(
  SMALL3D_INCLUDE_DIR
  NAMES
  small3d
  PATHS
  include)

find_library(
  SMALL3D_LIBRARY
  NAMES
  small3d
  libsmall3d
  PATHS
  lib)

find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(GLFW REQUIRED)
find_package(PNG REQUIRED)
find_package(GLM)
find_package(OGG REQUIRED)
find_package(VORBIS REQUIRED)
find_package(Portaudio REQUIRED)
find_package(Freetype REQUIRED)

if(UNIX OR (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" AND NOT
	CMAKE_CXX_COMPILER_VERSION VERSION_LESS 10))
  find_package(BZip2 REQUIRED)
endif()

include(FindPackageHandleStandardArgs)

find_package_handle_standard_args(SMALL3D REQUIRED_VARS SMALL3D_LIBRARY SMALL3D_INCLUDE_DIR)

set(SMALL3D_LIBRARIES
  ${SMALL3D_LIBRARY}
  ${GLEW_LIBRARIES}
  ${OPENGL_LIBRARIES}
  ${GLFW_LIBRARIES}
  ${PNG_LIBRARIES}
  ${VORBIS_LIBRARIES}
  ${OGG_LIBRARIES}
  ${PORTAUDIO_LIBRARIES}
  ${FREETYPE_LIBRARIES}
  )

set(SMALL3D_INCLUDE_DIRS
  ${SMALL3D_INCLUDE_DIR}
  ${GLFW_INCLUDE_DIRS}
  ${OPENGL_INCLUDE_DIR}
  ${PNG_INCLUDE_DIRS}
  ${GLM_INCLUDE_DIRS}
  ${OGG_INCLUDE_DIRS}
  ${VORBIS_INCLUDE_DIR}
  ${PORTAUDIO_INCLUDE_DIRS}
  ${FREETYPE_INCLUDE_DIRS}
  )

if(UNIX OR (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" AND NOT
	CMAKE_CXX_COMPILER_VERSION VERSION_LESS 10))
  set(SMALL3D_INCLUDE_DIRS ${SMALL3D_INCLUDE_DIRS} ${BZIP2_INCLUDE_DIRS})
  set(SMALL3D_LIBRARIES ${SMALL3D_LIBRARIES} ${BZIP2_LIBRARIES})
endif()

if(WIN32)
  set(SMALL3D_LIBRARIES ${SMALL3D_LIBRARIES} winmm)
endif()

if(UNIX AND NOT APPLE) # Linux
  set(SMALL3D_LIBRARIES ${SMALL3D_LIBRARIES} m pthread rt asound X11 dl)
endif()
