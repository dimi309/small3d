environment:
  matrix:
    - job_name: Windows VS 2022 builds
      appveyor_build_worker_image: Visual Studio 2022
      
    - job_name: Ubuntu Linux builds
      appveyor_build_worker_image: Ubuntu2004
      
    - job_name: MacOS builds
      appveyor_build_worker_image: macos-bigsur
      
    - job_name: Windows MinGW builds
      appveyor_build_worker_image: Visual Studio 2015
      
for:

-
  matrix:
    only:
      - job_name: Windows VS 2022 builds

  install:
  - choco install vulkan-sdk
  - refreshenv
  - set PATH=C:\Python38-x64;C:\Python38-x64\scripts;%PATH%
  - python -m pip install --upgrade pip
  - pip install conan
  - conan profile detect
  
  test_script:
  - cd ..
  - git clone https://github.com/dimi309/portaudio-conan
  - cd portaudio-conan
  - conan export . --version=19.7.0
  - cd ../small3d

  - conan create . --version=master -s build_type=Release --build=missing
#  - conan create . small3d/master@ -s build_type=Release -o small3d:vulkan=True --build=missing
  - conan create . --version=master -s build_type=Debug --build=missing
#  - conan create . small3d/master@ -s build_type=Debug -o small3d:vulkan=True --build=missing
  - cd scripts && .\build-vs.bat Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-vs.bat Release opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-vs.bat Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-vs.bat Release opengl && cd ..

-
  matrix:
    only:
      - job_name: Ubuntu Linux builds

  install:
  - sudo apt-get update
  - sudo apt-get -y install libgl-dev libglu1-mesa-dev glslang-tools libasound2-dev libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev libxcb-util-dev
  - source ~/venv3.10/bin/activate
  - pip install --upgrade pip
  - pip install conan
  - conan profile detect

  test_script:
  - cd ..
  - git clone https://github.com/dimi309/portaudio-conan
  - cd portaudio-conan
  - conan export . --version=19.7.0
  - cd ../small3d
  - conan create . --version=master -s build_type=Release --build=missing
#  - conan create . small3d/master@ -s cppstd=14 -s build_type=Release -o portaudio:with_jack=False -o small3d:vulkan=True --build=missing
  - conan create . --version=master -s build_type=Debug --build=missing
#  - conan create . small3d/master@ -s cppstd=14 -s build_type=Debug -o portaudio:with_jack=False -o small3d:vulkan=True --build=missing
  - cd scripts && ./build.sh Debug && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release opengl
  
-
  matrix:
    only:
      - job_name: MacOS builds
  install:
  - source ~/venv3.11.0/bin/activate
  - pip install --upgrade pip
  - pip install conan
  - conan profile detect
  - curl https://sdk.lunarg.com/sdk/download/1.3.224.1/mac/vulkansdk-macos-1.3.224.1.dmg -o vulkansdk-macos-1.3.224.1.dmg
  - sudo hdiutil attach vulkansdk-macos-1.3.224.1.dmg
  - sudo /Volumes/vulkansdk-macos-1.3.224.1/InstallVulkan.app/Contents/MacOS/InstallVulkan --root ~/VulkanSDK/1.3.224.1 --accept-licenses --default-answer --confirm-command install
  - sudo hdiutil detach /Volumes/vulkansdk-macos-1.3.224.1
  - export VULKAN_SDK=/Users/appveyor/VulkanSDK/1.3.224.1/macOS
  - export PATH=$PATH:$VULKAN_SDK/bin
  - export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$VULKAN_SDK/lib
  - export VK_LAYER_PATH=$VULKAN_SDK/share/vulkan/explicit_layer.d
  - export VK_ICD_FILENAMES=$VULKAN_SDK/../MoltenVK/dylib/macOS/MoltenVK_icd.json
  
  test_script:
  - cd ..
  - git clone https://github.com/dimi309/portaudio-conan
  - cd portaudio-conan
  - conan export . --version=19.7.0
  - cd ../small3d

  - conan create . --version=master -s build_type=Release --build=missing 
#  - conan create . small3d/master@ -s cppstd=14 -s build_type=Release -o small3d:vulkan=True --build=missing
  - conan create . --version=master -s build_type=Debug --build=missing
#  - conan create . small3d/master@ -s cppstd=14 -s build_type=Debug -o small3d:vulkan=True --build=missing
  - cd scripts && ./build.sh Debug && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release opengl

-
  matrix:
    only:
      - job_name: Windows MinGW builds

  install:
  - choco install vulkan-sdk
  - refreshenv
  - echo this is a MinGW build
  - set SELECTED_MINGW=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0
  - set PATH=%PATH%;%SELECTED_MINGW%\mingw64\bin
  - rmdir /Q /S C:\msys64
  - rmdir /Q /S C:\MinGW
  - del "C:\Program Files\Git\usr\bin\sh.exe"
#  - set PATH=C:\Python38-x64;C:\Python38-x64\scripts;%PATH%
#  - python -m pip install --upgrade pip
#  - pip install conan
#  - conan profile new mingw --detect
#  - conan profile update settings.compiler=gcc mingw
#  - conan profile update settings.compiler.version=8.1 mingw
#  - conan profile update settings.compiler.libcxx=libstdc++11 mingw
#  - conan remote add barbarian-github https://barbarian.bfgroup.xyz/github
  
  test_script:

# conan build started crashing on appveyor even though it works locally (cannot link with
# the glew package through conan: "/bin/ld.exe: cannot find -llibglew32d")
# - conan create . small3d/master@ -pr=mingw -s build_type=Debug --build=missing && cd ..
# - conan create . small3d/master@ -pr=mingw -s build_type=Release --build=missing && cd ..
# conan Vulkan package build was already crashing, so no conan Vulkan build here
  - cd scripts && .\build-mingw.bat Debug && cd ..
  - git clean -fdx
  - cd scripts && .\build-mingw.bat Release && cd ..
  - git clean -fdx
  - cd scripts && .\build-mingw.bat Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-mingw.bat Release opengl && cd ..

build: off
