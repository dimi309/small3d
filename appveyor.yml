environment:
  matrix:
    - job_name: Windows MinGW build (OpenGL)
      appveyor_build_worker_image: Visual Studio 2015
      
    - job_name: Ubuntu Linux build (OpenGL & Vulkan)
      appveyor_build_worker_image: Ubuntu2004
      
    - job_name: MacOS build (OpenGL & Vulkan)
      appveyor_build_worker_image: macos-bigsur
      
    - job_name: Windows VS 2019 build (OpenGL & Vulkan)
      appveyor_build_worker_image: Visual Studio 2019
      
for:
-
  matrix:
    only:
      - job_name: Windows MinGW build (OpenGL)

  install:
  - choco install vulkan-sdk
  - refreshenv
  - echo this is a MinGW build
  - set SELECTED_MINGW=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0
  - set PATH=%PATH%;%SELECTED_MINGW%\mingw64\bin
  - rmdir /Q /S C:\msys64
  - rmdir /Q /S C:\MinGW
  - del "C:\Program Files\Git\usr\bin\sh.exe"
  - set PATH=C:\Python38-x64;C:\Python38-x64\scripts;%PATH%
  - python -m pip install --upgrade pip
  - pip install conan
  - conan profile new mingw --detect
  - conan profile update settings.compiler=gcc mingw
  - conan profile update settings.compiler.version=8.1 mingw
  - conan profile update settings.compiler.libcxx=libstdc++11 mingw
  - conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
  - conan config set general.revisions_enabled=1
  
  test_script:
  - cd conan_io && conan create . small3d/master@ -pr=mingw -s build_type=Release --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -pr=mingw -s build_type=Debug --build=missing && cd ..
  # Vulkan package build crashes, so no conan Vulkan build here
  - cd scripts && .\build-mingw.bat Debug && cd ..
  - git clean -fdx
  - cd scripts && .\build-mingw.bat Release && cd ..
  - git clean -fdx
  - cd scripts && .\build-mingw.bat Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-mingw.bat Release opengl && cd ..
  

-
  matrix:
    only:
      - job_name: Ubuntu Linux build (OpenGL & Vulkan)

  install:
  - sudo apt-get update
  - sudo apt-get -y install libgl-dev libglu1-mesa-dev glslang-tools
  - source ~/venv3.9.6/bin/activate
  - pip install --upgrade pip
  - pip install conan
  - conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
  - conan config set general.revisions_enabled=1

  test_script:
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Release -o portaudio:with_jack=False --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Release -o portaudio:with_jack=False -o small3d:vulkan=True --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Debug -o portaudio:with_jack=False --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Debug -o portaudio:with_jack=False -o small3d:vulkan=True --build=missing && cd ..
  - cd scripts && ./build.sh Debug && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release opengl
  
-
  matrix:
    only:
      - job_name: MacOS build (OpenGL & Vulkan)
  install:
  - source ~/venv3.9.6/bin/activate
  - pip install --upgrade pip
  - pip install conan
  - conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
  - conan config set general.revisions_enabled=1
  - curl https://sdk.lunarg.com/sdk/download/1.2.189.0/mac/vulkansdk-macos-1.2.189.0.dmg -o vulkansdk-macos-1.2.189.0.dmg
  - sudo hdiutil attach vulkansdk-macos-1.2.189.0.dmg
  - sudo /Volumes/vulkansdk-macos-1.2.189.0/InstallVulkan.app/Contents/MacOS/InstallVulkan --root ~/VulkanSDK/1.2.189.0 --accept-licenses --default-answer --confirm-command install
  - sudo hdiutil detach /Volumes/vulkansdk-macos-1.2.189.0
  
  test_script:
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Release --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Release -o small3d:vulkan=True --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Debug --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s cppstd=14 -s build_type=Debug -o small3d:vulkan=True --build=missing && cd ..
  - cd scripts && ./build.sh Debug && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && ./build.sh Release opengl
  
-
  matrix:
    only:
      - job_name: Windows VS 2019 build (OpenGL & Vulkan)

  install:
  - choco install vulkan-sdk
  - refreshenv
  - set PATH=C:\Python38-x64;C:\Python38-x64\scripts;%PATH%
  - python -m pip install --upgrade pip
  - pip install conan
  - conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
  - conan config set general.revisions_enabled=1
  
  test_script:
  - cd conan_io && conan create . small3d/master@ -s build_type=Release --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s build_type=Release -o small3d:vulkan=True --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s build_type=Debug --build=missing && cd ..
  - cd conan_io && conan create . small3d/master@ -s build_type=Debug -o small3d:vulkan=True --build=missing && cd ..
  - cd scripts && .\build-vs.bat Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-vs.bat Release opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-vs.bat Debug opengl && cd ..
  - git clean -fdx
  - cd scripts && .\build-vs.bat Release opengl && cd ..

build: off
